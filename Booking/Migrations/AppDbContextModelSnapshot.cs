// <auto-generated />
using System;
using Booking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booking.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Booking.Entity.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("End");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Note")
                        .HasMaxLength(500);

                    b.Property<int>("RoomId");

                    b.Property<DateTime>("Start");

                    b.HasKey("ReservationId");

                    b.HasIndex("RoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Booking.Entity.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("OpenFrom");

                    b.Property<int>("OpenTill");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Description = "Room 1 description",
                            Name = "Room 1",
                            OpenFrom = 8,
                            OpenTill = 16
                        },
                        new
                        {
                            RoomId = 2,
                            Description = "Room 2 description",
                            Name = "Room 2",
                            OpenFrom = 9,
                            OpenTill = 15
                        },
                        new
                        {
                            RoomId = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis dictum ipsum sapien, nec dapibus arcu posuere vel. Ut ac bibendum velit, a tincidunt erat. Integer ut eros ac augue ornare malesuada. Morbi eleifend metus ac sollicitudin pretium. Mauris sapien neque, pretium eu blandit in, placerat vitae mi. Nullam consequat, mi sit amet pellentesque dictum, metus orci tristique felis, quis scelerisqu",
                            Name = "Room 3",
                            OpenFrom = 7,
                            OpenTill = 12
                        });
                });

            modelBuilder.Entity("Booking.Entity.Reservation", b =>
                {
                    b.HasOne("Booking.Entity.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
